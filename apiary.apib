FORMAT: 1A
HOST: http://www.pages.com
VERSION: 0.6.1

# Pages
Content management system

## Allowed HTTP requests

- `POST` - Creates a resource
- `PUT` - Updates a resource
- `GET` - Retrieves a resource or a list of resources
- `DELETE` - Deletes a resource

## Typical server responses

- 200 `OK` - The request was successful (some API calls may return 201 or 204 instead).
- 201 `Created` - The request was successful, and a resource was created.
- 204 `No Content` - The request was successful, but no content is returned.
- 400 `Bad Request` - The request wasn't understood or was missing the required parameters.
- 401 `Unauthorized` - Authentication token is invalid or has expired. (Try logging in again.)
- 403 `Forbidden` - Access denied.
- 404 `Not Found` - The requested resource wasn't found.



# Group User
Users are owners of Pages. User can have many Pages.

## Tokens collection [/tokens]
### Create token [POST]

+ Request (application/json)

        {
            "email":"user@email.com",
            "password":"password"
        }

+ Response 201 (application/json)

        { 
            "token": "token_string",
            "expire_in": 86400000
        }


## Token [/tokens/{token_id}]

+ Parameters

    + token_id (required, string, `53c3dbdd72530e32f7503347`) ... Hash string `id` of the Token to perform action with. Has example value.

### Delete token [DELETE]
+ Response 204


# Group Files
File operations

## Files upload sign [/files/sign?name={name}&type={type}]
### Sign file for upload to Amazon S3 [GET]
+ Parameters

    + name (required, string, `image.png`) ... Uploaded filename.
    + type (required, string, `image/png`) ... Uploaded file mimetype.
    
+ Request (application/json)

    + Headers
    
            X-Auth-Token: token_string

+ Response 200 (application/json)

        {
            "signed_upload_url": "https://ccpages.s3.amazonaws.com/user_id/image.png?AWSAccessKeyId=ABCDEFMNHP1234567890&Expires=1428572002&Signature=k03muD8Y3qvmwJ0O%2FodRjnqWQM4%3D",
            "url": "https://ccpages.s3.amazonaws.com/user_id/image.png",
            "path": "user_id/image.png"
        }


# Group Pages
Basic operation with users Pages

## Pages Collection [/pages]
### List all Pages [GET]
+ Request (application/json)

    + Headers
        
            X-Auth-Token: token_string

+ Response 200 (application/json)

        [
            { 
                "id": "53ba7fc872530e577f35c699",
                "db": {
                    "name": "Page numero uno",
                    "description": "My awesome page about something special",
                    "image": null,
                    "content": "Lorem ipsum dolor sit amet, consectetur adipiscing elit. Suspendisse vel tellus dolor. Nam placerat varius diam, eu tempor sem malesuada sed. Vivamus sit amet lectus ac libero consectetur fringilla a non eros. Donec congue dolor et eros malesuada accumsan. Duis sed condimentum augue. Fusce fermentum ac dui a viverra."
                },
                "page_url": "http://localhost:8000/page-apiary.html"
            },
            { 
                "id": "53c3dbdd72530e32f7503347",
                "db": {
                    "name": "My awesome page",
                    "description": "My awesome page about something special",
                    "image": null,
                    "content": "Lorem ipsum dolor sit amet, consectetur adipiscing elit. Suspendisse vel tellus dolor. Nam placerat varius diam, eu tempor sem malesuada sed. Vivamus sit amet lectus ac libero consectetur fringilla a non eros. Donec congue dolor et eros malesuada accumsan. Duis sed condimentum augue. Fusce fermentum ac dui a viverra."
                },
                "page_url": "http://localhost:8000/page-apiary.html"
            }
        ]

### Create a Page [POST]
+ Request (application/json)

    + Headers
        
            X-Auth-Token: token_string
            
    + Body
    
            { 
                "db": {
                    "name": "Page numero uno",
                    "description": "My awesome page about something special",
                    "image": null,
                    "content": "Lorem ipsum dolor sit amet, consectetur adipiscing elit. Suspendisse vel tellus dolor. Nam placerat varius diam, eu tempor sem malesuada sed. Vivamus sit amet lectus ac libero consectetur fringilla a non eros. Donec congue dolor et eros malesuada accumsan. Duis sed condimentum augue. Fusce fermentum ac dui a viverra.",
                }
            }

+ Response 201 (application/json)

        { 
            "id": "53c3dbdd72530e32f7503347", 
            "db": {
                "name": "Page numero uno",
                "description": "My awesome page about something special",
                "image": null,
                "content": "Lorem ipsum dolor sit amet, consectetur adipiscing elit. Suspendisse vel tellus dolor. Nam placerat varius diam, eu tempor sem malesuada sed. Vivamus sit amet lectus ac libero consectetur fringilla a non eros. Donec congue dolor et eros malesuada accumsan. Duis sed condimentum augue. Fusce fermentum ac dui a viverra."
            },
            "page_url": "http://localhost:8000/page-apiary.html"
        }

## Page [/pages/{page_id}]
A single Page object with all its details

+ Parameters

    + page_id (required, string, `53c3dbdd72530e32f7503347`) ... Hash string `id` of the Page to perform action with. Has example value.

### Retrieve a Page [GET]
+ Request (application/json)

+ Response 200 (application/json)

        { 
            "id": "53c3dbdd72530e32f7503347",
            "db": {
                "name": "Hello World",
                "description": "My awesome page about something special",
                "image": null,
                "content": "Lorem ipsum dolor sit amet, consectetur adipiscing elit. Suspendisse vel tellus dolor. Nam placerat varius diam, eu tempor sem malesuada sed. Vivamus sit amet lectus ac libero consectetur fringilla a non eros. Donec congue dolor et eros malesuada accumsan. Duis sed condimentum augue. Fusce fermentum ac dui a viverra."
            },
            "page_url": "http://localhost:8000/page-apiary.html"
        }

### Update a Page [PUT]
+ Request (application/json)

    + Headers
        
            X-Auth-Token: token_string
            
    + Body
    
            { 
                "id": "53c3dbdd72530e32f7503347",
                "db": {
                    "name": "Updated Page",
                    "description": "My awesome page about something special",
                    "image": null,
                    "content": "Lorem ipsum dolor sit amet, consectetur adipiscing elit. Suspendisse vel tellus dolor. Nam placerat varius diam, eu tempor sem malesuada sed. Vivamus sit amet lectus ac libero consectetur fringilla a non eros. Donec congue dolor et eros malesuada accumsan. Duis sed condimentum augue. Fusce fermentum ac dui a viverra."
                },
                "page_url": "http://localhost:8000/page-apiary.html"
            }
        
+ Response 200 (application/json)

        { 
            "id": "53c3dbdd72530e32f7503347",
            "db": {
                "name": "Updated Page",
                "description": "My awesome page about something special",
                "image": null,
                "content": "Lorem ipsum dolor sit amet, consectetur adipiscing elit. Suspendisse vel tellus dolor. Nam placerat varius diam, eu tempor sem malesuada sed. Vivamus sit amet lectus ac libero consectetur fringilla a non eros. Donec congue dolor et eros malesuada accumsan. Duis sed condimentum augue. Fusce fermentum ac dui a viverra."
            },
            "page_url": "http://localhost:8000/page-apiary.html"
        }

### Delete a Page [DELETE]
+ Request (application/json)

    + Headers
        
            X-Auth-Token: token_string

+ Response 204

+ Response 404

        { 
            "error": "Resource not found"
        }