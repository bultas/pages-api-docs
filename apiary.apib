FORMAT: 1A
HOST: http://www.pages.com
VERSION: 0.5.1

# Pages
Content management system

## Allowed HTTPs requests:

- `POST` - Creates a resource
- `PUT` - Updates a resource
- `PATCH` - Partially updates a resource
- `GET` - Retrieves a resource or list of resources
- `DELETE` - Delete a resource

## Typical Server Responses

- 200 `OK` - The request was successful (some API calls may return 201 instead).
- 201 `Created` - The request was successful and a resource was created.
- 400 `Bad Request` - The request could not be understood or was missing required parameters.
- 401 `Unauthorized` - Authentication token is invalid or expired (try login again)
- 403 `Forbidden` - Access denied. 
- 404 `Not Found` - Resource was not found.



# Group User
Users are owners of Pages. User can have many Pages.

## Tokens collection [/tokens]
### Create token [POST]

+ Request (application/json)
    
        {
            "email":"user@email.com",
            "password":"password"
        }

+ Response 201 (application/json)
    
        { 
            token: "token_string"
        }


## Token [/tokens/{token_id}]

+ Parameters
    + token_id (required, string, `53c3dbdd72530e32f7503347`) ... Hash string `id` of the Token to perform action with. Has example value.

### Delete token [DELETE]
+ Response 204



# Group Pages
Basic operation with users Pages

## Pages Collection [/pages]
### List all Pages [GET]
+ Request (application/json)

    + Headers
        
            X-Auth-Token: token_string

+ Response 200 (application/json)

        [
            { 
                "id": "53ba7fc872530e577f35c699",
                "db": {
                    "name": "Page numero uno",
                    "description": "My awesome page about something special",
                    "image": "http://image-url.com/image.jpg",
                    "content": "<html string>"
                },
                html: "<Page html>"
            },
            { 
                "id": "53c3dbdd72530e32f7503347",
                "db": {
                    "name": "My awesome page",
                    "description": "My awesome page about something special",
                    "image": "http://image-url.com/image.jpg",
                    "content": "<html string>"
                },
                html: "<Page html>"
            }
        ]

### Create a Page [POST]
+ Request (application/json)

    + Headers
        
            X-Auth-Token: token_string

    + Body
    
            { 
                "db": {
                    "name": "Page numero uno",
                    "description": "My awesome page about something special",
                    "image": "http://image-url.com/image.jpg",
                    "content": "<html string>"
                },
                html: "<Page html>"
            }

+ Response 201 (application/json)

        { 
            "id": "53c3dbdd72530e32f7503347", 
            "db": {
                "name": "Page numero uno",
                "description": "My awesome page about something special",
                "image": "http://image-url.com/image.jpg",
                "content": "<html string>"
            },
            html: "<Page html>"
        }

## Page [/pages/{page_id}]
A single Page object with all its details

+ Parameters
    + page_id (required, string, `53c3dbdd72530e32f7503347`) ... Hash string `id` of the Page to perform action with. Has example value.

### Retrieve a Page [GET]
+ Request (application/json)

    + Headers
        
            X-Auth-Token: token_string

+ Response 200 (application/json)

        { 
            "id": "53c3dbdd72530e32f7503347",
            "db": {
                "name": "My awesome page",
                "description": "My awesome page about something special",
                "image": "http://image-url.com/image.jpg",
                "content": "<html string>"
            },
            html: "<Page html>"
        }

### Update a Page [PUT]
+ Request (application/json)

    + Headers
        
            X-Auth-Token: token_string
            
    + Body
    
            { 
                "id": "53c3dbdd72530e32f7503347",
                "db": {
                    "name": "Updated Page",
                    "description": "My awesome page about something special",
                    "image": "http://image-url.com/image.jpg",
                    "content": "<html string>"
                },
                html: "<Page html>"
            }
        
+ Response 200 (application/json)

        { 
            "id": "53c3dbdd72530e32f7503347",
            "db": {
                "name": "Updated Page",
                "description": "My awesome page about something special",
                "image": "http://image-url.com/image.jpg",
                "content": "<html string>"
            },
            html: "<Page html>"
        }

### Delete a Page [DELETE]
+ Request (application/json)

    + Headers
        
            X-Auth-Token: token_string

+ Response 204

+ Response 404
 
        { 
            "error": "Resource not found"
        }